{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","formControl","error","formSummaryError","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","FormControl","_ref","input","_ref$meta","meta","touched","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","Textarea","props","restProps","child","Object","C_Users_Masha_Desktop_react_kabzda_react_kabzda_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_excluded","assign","Input","_excluded2","createField","placeholder","name","validators","component","arguments","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","dialogs","dialogsItems","active","messages","message","descriptionBlock","item","Message","react_default","classes","dialog","DialogItem","path","id","react_router_dom","to","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","map","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","react_router","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","this","apply","createClass","React"],"mappings":"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","file":"static/js/6.c2137adf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3m6uD\",\"error\":\"FormsControls_error__3tgm9\",\"formSummaryError\":\"FormsControls_formSummaryError__3Bw93\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n    {text}\r\n  </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2vjKb\",\"dialogsItems\":\"Dialogs_dialogsItems__2iIWO\",\"active\":\"Dialogs_active__7rQGL\",\"messages\":\"Dialogs_messages__1JzrS\",\"message\":\"Dialogs_message__f40E1\",\"descriptionBlock\":\"Dialogs_descriptionBlock__pGkAr\",\"item\":\"Dialogs_item__7ho_a\"};","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={classes.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n      {/* <div className={classes.item}>\r\n        <img src=\"https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\" />\r\n        {props.message}\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n        <div className={classes.messages}>\r\n          <div>{messagesElements}</div>\r\n        </div>\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendMessageCreator } from \"../../redux/dialogsReducer.js\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect.js\";\r\nimport { compose } from \"redux\";\r\n\r\n// const DialogsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let onSendMessageClick = () => {\r\n//           store.dispatch(sendMessageCreator());\r\n//         };\r\n\r\n//         let onNewMessageChange = (body) => {\r\n//           store.dispatch(updateNewMessageBodyCreator(body));\r\n//         };\r\n//         return (\r\n//           <Dialogs\r\n//             updateNewMessageBody={onNewMessageChange}\r\n//             sendMessage={onSendMessageClick}\r\n//             dialogsPage={store.getState().dialogsPage}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}